// Code generated by MockGen. DO NOT EDIT.
// Source: mount_api.go

// Package mock_dagstore is a generated GoMock package.
package mock_dagstore

import (
	context "context"
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cid "github.com/ipfs/go-cid"
)

// MockLotusMountAPI is a mock of LotusMountAPI interface.
type MockLotusMountAPI struct {
	ctrl     *gomock.Controller
	recorder *MockLotusMountAPIMockRecorder
}

// MockLotusMountAPIMockRecorder is the mock recorder for MockLotusMountAPI.
type MockLotusMountAPIMockRecorder struct {
	mock *MockLotusMountAPI
}

// NewMockLotusMountAPI creates a new mock instance.
func NewMockLotusMountAPI(ctrl *gomock.Controller) *MockLotusMountAPI {
	mock := &MockLotusMountAPI{ctrl: ctrl}
	mock.recorder = &MockLotusMountAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLotusMountAPI) EXPECT() *MockLotusMountAPIMockRecorder {
	return m.recorder
}

// FetchUnsealedPiece mocks base method.
func (m *MockLotusMountAPI) FetchUnsealedPiece(ctx context.Context, pieceCid cid.Cid) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchUnsealedPiece", ctx, pieceCid)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchUnsealedPiece indicates an expected call of FetchUnsealedPiece.
func (mr *MockLotusMountAPIMockRecorder) FetchUnsealedPiece(ctx, pieceCid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchUnsealedPiece", reflect.TypeOf((*MockLotusMountAPI)(nil).FetchUnsealedPiece), ctx, pieceCid)
}

// GetUnpaddedCARSize mocks base method.
func (m *MockLotusMountAPI) GetUnpaddedCARSize(pieceCid cid.Cid) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUnpaddedCARSize", pieceCid)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUnpaddedCARSize indicates an expected call of GetUnpaddedCARSize.
func (mr *MockLotusMountAPIMockRecorder) GetUnpaddedCARSize(pieceCid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUnpaddedCARSize", reflect.TypeOf((*MockLotusMountAPI)(nil).GetUnpaddedCARSize), pieceCid)
}
